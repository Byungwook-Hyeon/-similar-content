#############################################
##### Server
#server:
#  port: 8080
#  shutdown: graceful
#  tomcat:
#    threads:
#      max: 200
#      min-spare: 150
#    accept-count: 10
#
#############################################
#####  Spring
#spring:
#  #### Open Tracing
#  zipkin:
#    enabled: false
#    baseUrl: http://localhost:9411/
#
#  application:
#    name: contents
#  lifecycle:
#    timeout-per-shutdown-phase: 1m
#  profiles:
#    active: local
#
#  #### Message Source
#  messages:
#    basename: messages/response
#    encoding: utf-8
#
#  #### Open Tracing
#  #  zipkin:
#  #    baseUrl: http://localhost:9411/
#
#  #### Data Source
#  datasource:
#    reader:
#      maximum-pool-size: 25
#      minimum-idle: 25
#    writer:
#      maximum-pool-size: 25
#      minimum-idle: 25
#
#    hikari:
#      connection-timeout: 5000
#      validation-timeout: 20000
#      leak-detection-threshold: 10000
#      max-lifetime: 60000
#      data-source-properties:
#        cachePrepStmts: true
#        prepStmtCacheSize: 250
#        prepStmtCacheSqlLimit: 2048
#        useServerPrepStmts: true
#
#  #### JPA
#  jpa:
#    database: postgresql
#    open-in-view: false
#    hibernate:
#      naming:
#        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#      use-new-id-generator-mappings: false
#    properties:
#      hibernate:
#        temp:
#          use_jdbc_metadata_defaults: false
#        format_sql: false
#        jdbc:
#          lob:
#            non_contextual_creation: true
#    show-sql: false
#
#############################################
#####  Logging
#logging:
#  level:
#    root: info
#    #org.apache.kafka: warn
#  pattern:
#    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}][%X{saId:-}][%X{stbMac:-}]"
#
#############################################
### Actuator
#management:
#  endpoint:
#    health:
#      enabled: true
#
#############################################
##### FeignClient
#feign:
#  client:
#    config:
#      subscriberLongLatency:
#        connectTimeout: 2000
#        readTimeout: 10000
#        loggerLevel: NONE
#      default:
#        connectTimeout: 2000
#        readTimeout: 2000
#        loggerLevel: NONE
#  httpclient:
#    enabled: true
#    connection-timeout: 2900
#    max-connections: 100


############################################
#### Server
server:
  port: 8081
  shutdown: graceful
  tomcat:
    connection-timeout: 2800
    threads:
      max: 250
      min-spare: 250



############################################
#### Spring
spring:
  # SCS(카프카) 관련 설정 제외, CUD 발생 시 제거
#  autoconfigure:
#    exclude:
#      - org.springframework.cloud.stream.config.BindingServiceConfiguration
#      - org.springframework.cloud.stream.function.FunctionConfiguration

  application:
    name: vodlookup
    name-abbr: VL  # 서비스 도메인 약어
  lifecycle:
    timeout-per-shutdown-phase: 1m
  profiles:
    active: local

  #### Open Tracing
  zipkin:
    enabled: false

  #### Message Source
  messages:
    basename: messages/response
    encoding: utf-8

  #### Spring Data
  data:
    redis:
      repositories:
        enabled: false

  #### Data Source
  datasource:
    hikari:
      connection-timeout: 2700
      validation-timeout: 2100
      leak-detection-threshold: 59000
      max-lifetime: 60000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 500
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true

  #### JPA
  jpa:
    open-in-view: false
    database: postgresql
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
        jdbc.batch_size: 100
        temp:
          use_jdbc_metadata_defaults: false
        jdbc:
          lob:
            non_contextual_creation: true

  #### Cache
  cache:
    type: redis
  #### Redis
  redis:
    timeout: 500ms  # Redis read timeout, ms
    connect-timeout: 500ms
    lettuce:
      cluster:
        refresh:
          period: 60s
          adaptive: true
    cluster:
      max-redirects: 5

  #### scheduling
  task:
    scheduling:
      pool:
        size: 10
      thread-name-prefix: job-lock

  #### cloud stream
  cloud:
    stream:
      default:
        # content-type은 application/json이 기본 값이다.
        content-type: application/json
        consumer:
          max-attempts: 3
      bindings:
        # inbound 채널, 메시지 수신 설정
        # bpas 어드민 메시지 수신 설정
        bpas-admin-VodProgramming-in:
          # fail-over & 중복 수신 방지, kafka topic으로 부터 consumer group 별로 하나의 메시지를 풀한다.
          group: group.vodlookup
          # kafka topic
          destination: imcs-rd.VodProgramming

        # dlq inbound 채널 설정
        dlq-bpas-admin-VodProgramming-in:
          group: dlq.group.vodlookup
          destination: dlq.imcs-rd.VodProgramming
        # outbound 채널, 메시지 발송 설정
        # 보통 내부 MSA 서비스와 통신할 topic을 정의하기 때문에 송/수신용의 동일한 토픽을 사용할 일은 거의 없으나 테스트를 위해 발송 채널 정의
        bpas-admin-VodProgramming-out:
          destination: imcs-rd.VodProgramming

        bpas-admin-Product-in:
          group: group.vodlookup
          destination: imcs-rd.Product

        dlq-bpas-admin-Product-in:
          group: dlq.group.vodlookup
          destination: dlq.imcs-rd.Product

        bpas-admin-Product-out:
          destination: imcs-rd.Product

        bpas-admin-Watching-in:
          group: group.vodlookup
          destination: imcs-rd.Watching

        dlq-bpas-admin-Watching-in:
          group: dlq.group.vodlookup
          destination: dlq.imcs-rd.Watching

        bpas-admin-Watching-out:
          destination: imcs-rd.Watching

      # kafka, rabbitmq, aws sns/sqs 등의 설정, 메시지큐 변경 시 아래 부분만 수정하면 연동 및 비즈니스 로직은 수정할 필요가 없다.
      kafka:
        binder:
          brokers: <<kafka.dbsync.plaintext.bootstrapservers>>
          auto-create-topics: true
          auto-add-partitions: true
        bindings:
          # bpas 어드민 메시지 오류 수신
          bpas-admin-VodProgramming-in:
            # Dead Letter Processing
            consumer:
              enableDlq: true
              # dlq 토픽 명
              dlqName: dlq.imcs-rd.VodProgramming
          bpas-admin-Product-in:
            consumer:
              enableDlq: true
              dlqName: dlq.imcs-rd.Product

          bpas-admin-Watching-in:
            consumer:
              enableDlq: true
              dlqName: dlq.imcs-rd.Watching



############################################
#### Logging
logging:
  level:
    root: INFO
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}][%X{saId:-}][%X{stbMac:-}]"



############################################
#### Other Domain Application Service
service:
  subscriber:
    base-url: http://subscriber:8080
  watching:
    base-url: http://watching:8080
  purchasing:
    base-url: http://purchasing:8080



############################################
#### FeignClient
feign:
  client:
    config:
      default: # @FeignClient의 value/name 속성 (default는 전체 적용)
        connectTimeout: 2000
        readTimeout: 2000
        #### Logging Level
        # NONE    : 미로깅 (Default)
        # BASIC   : Request Method, URL, Response 상태 코드, 실행 시간 로깅
        # HEADERS : Request, Response Header, 기본정보 로깅
        # FULL    : Request, Response Header, Response Body, 메타정보 로깅
        loggerLevel: NONE
  httpclient:
    enabled: true
    connection-timeout: 2700
    max-connections: 100



############################################
## Actuator
management:
  endpoint:
    health:
      enabled: true
  health:
    db:
      enabled: false
    redis:
      enabled: false



############################################
## CDN
CDNINFO:
  CFLAG: 0
  #CDN(O : CDN IP REPSON(DONG CODE) / 1 : CDN IP REPSON(CACHE) / 2 : CDN IP NON REPSON)
  CDNFLAG: 0
  CDNIP: 211.170.221.69;211.170.221.5
  CDNTYPE: 1;1
  V6CDNIP: 2001:0270:fb30::d3aa:dd45;2001:0270:fb30::d3aa:dd05



############################################
## IMAGE CACHE SERVER CONFIG
imageServer:
  flag: 0 #(0:방송센터 , 1:DR센터)



###########################################
##  scheduling enable/disable
scheduleEnable:
  i30list: true
